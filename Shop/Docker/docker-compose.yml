version: '3.3'

services:
  shopdb-node1:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: shopdb-node1
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: shopdb
      MYSQL_USER: shopuser
      MYSQL_PASSWORD: shopuser
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - shop-network
    ports:
      - 3360:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=shopuser --password=shopuser --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 20
    volumes:
      - shopdb-node1-data:/var/lib/mariadb

  shopdb-node2:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: shopdb-node2
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: shopdb
      MYSQL_USER: shopuser
      MYSQL_PASSWORD: shopuser
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - shop-network
    ports:
      - 3361:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=shopuser --password=shopuser --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 20
    volumes:
      - shopdb-node2-data:/var/lib/mariadb


  proxysql:
      build:
        context: proxysql
        dockerfile: Dockerfile
      container_name: proxysql
      command: >
        --initial
      volumes:
        - proxysql-data:/var/lib/proxysql
      healthcheck:
        test: "/usr/bin/mariadb --user=shopuser --password=shopuser --execute \"SHOW DATABASES;\""
        timeout: 20s
        retries: 10
      networks:
        - shop-network
      ports:
        # Mysql Client Port
        - "6033:6033"
        # Mysql Admin Port
        - "6032:6032"
      depends_on:
        - shopdb-node1
        - shopdb-node2

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning 
    networks:
      - shop-network
    volumes: 
      - cache:/data

  user_service:
    build:
      context: UserService
      dockerfile: Dockerfile
    container_name: user_service
    restart: unless-stopped
    environment:
      - DB_HOST=shopdb-node
      - DB_PORT=3306
      - DB_LOGIN=shopuser
      - DB_PASSWORD=shopuser
      - DB_DATABASE=shopdb
      - CACHE=cache:6379
    ports:
      - 8080:8080
    networks:
      - shop-network
    depends_on:
      cache:
        condition: service_started
      shopdb-node1:
        condition: service_started
      shopdb-node2:
        condition: service_started

  product_service:
    build:
      context: ProductService
      dockerfile: Dockerfile
    container_name: product_service
    restart: unless-stopped
    environment:
      - SERVICE_HOST=user_service
      - DB_HOST=shopdb-node
      - DB_PORT=3306
      - DB_LOGIN=shopuser
      - DB_PASSWORD=shopuser
      - DB_DATABASE=shopdb
      - CACHE=cache:6379
    ports:
      - 8081:8081
    networks:
      - shop-network
    depends_on:
      user_service:
        condition: service_started

  basket_service:
    build:
      context: BasketService
      dockerfile: Dockerfile
    container_name: basket_service
    restart: unless-stopped
    environment:
      - SERVICE_HOST=user_service
      - DB_HOST=shopdb-node
      - DB_PORT=3306
      - DB_LOGIN=shopuser
      - DB_PASSWORD=shopuser
      - DB_DATABASE=shopdb
      - CACHE=cache:6379
    ports:
      - 8082:8082
    networks:
      - shop-network
    depends_on:
      user_service:
        condition: service_started

volumes:
  shopdb-node1-data:
  shopdb-node2-data:
  proxysql-data:
  cache:


networks:
  shop-network:
    driver: "bridge"
    external: false
